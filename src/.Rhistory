spring_lsd <- spring_example %>%
rowwise() %>%
mutate(
calf_prev = 100*inf_calves/num_calves,
weaned_prev = 100*inf_weaned/num_weaned,
heifer_prev = 100*inf_heifers/num_heifers,
dh_prev = 100*inf_dh/num_dh,
lactating_prev = 100*inf_lac/num_lactating,
dry_prev = 100*inf_dry/num_dry
) %>%
select(step, contains("prev")) %>%
pivot_longer(cols = contains("prev"), names_to = "ls_prev", values_to = "prev")
spring_lsd
spring_lsd_pp <- spring_lsd %>%
ggplot(aes(x = step, y = prev, color = lsd_prev))
spring_lsd_pp <- spring_lsd %>%
ggplot(aes(x = step, y = prev, color = lsd_prev)) +
geom_line()
spring_lsd_pp
spring_lsd_pp <- spring_lsd %>%
ggplot(aes(x = step, y = prev, color = ls_prev)) +
geom_line()
spring_lsd_pp
spring_lsd_pp <- spring_lsd %>%
ggplot(aes(x = step, y = prev, color = ls_prev)) +
geom_line() +
theme_minimal() +
xlab("Model step") +
ylab("Point prevalence") +
ggtitle("spring-calving herd") +
labs(colour = "Life stage")
spring_lsd_pp
split_lsd <- split_example %>%
rowwise() %>%
mutate(
calf_prev = 100*inf_calves/num_calves,
weaned_prev = 100*inf_weaned/num_weaned,
heifer_prev = 100*inf_heifers/num_heifers,
dh_prev = 100*inf_dh/num_dh,
lactating_prev = 100*inf_lac/num_lactating,
dry_prev = 100*inf_dry/num_dry
) %>%
select(step, contains("prev")) %>%
pivot_longer(cols = contains("prev"), names_to = "ls_prev", values_to = "prev")
split_lsd_pp <- split_lsd %>%
ggplot(aes(x = step, y = prev, color = ls_prev)) +
geom_line() +
theme_minimal() +
xlab("Model step") +
ylab("Point prevalence") +
ggtitle("split-calving herd") +
labs(colour = "Life stage")
split_lsd_pp
batch_lsd <- batch_example %>%
rowwise() %>%
mutate(
calf_prev = 100*inf_calves/num_calves,
weaned_prev = 100*inf_weaned/num_weaned,
heifer_prev = 100*inf_heifers/num_heifers,
dh_prev = 100*inf_dh/num_dh,
lactating_prev = 100*inf_lac/num_lactating,
dry_prev = 100*inf_dry/num_dry
) %>%
select(step, contains("prev")) %>%
pivot_longer(cols = contains("prev"), names_to = "ls_prev", values_to = "prev")
batch_lsd_pp <- batch_lsd %>%
ggplot(aes(x = step, y = prev, color = ls_prev)) +
geom_line() +
theme_minimal() +
xlab("Model step") +
ylab("Point prevalence") +
ggtitle("batch-calving herd") +
labs(colour = "Life stage")
batch_lsd_pp
batch_lsd %>%
ggplot(aes(x = step, y = prev, color = ls_prev)) +
geom_col() +
theme_minimal() +
xlab("Model step") +
ylab("Point prevalence") +
ggtitle("batch-calving herd") +
labs(colour = "Life stage")
spring_transmissions <- read_csv("./data/spring_transmissions.csv")
spring_transmissions <- read_csv("./export/spring_transmissions.csv")
spring_transmissions
spring_transmissions <- read_csv("./export/spring_transmissions.csv") %>%
filter(type = non)
spring_transmissions <- read_csv("./export/spring_transmissions.csv") %>%
filter(type != "none")
spring_transmissions
spring_trans_types <- spring_transmissions %>%
group_by(type) %>%
summarise(count = n())
spring_trans_types
spring_trans_types <- spring_transmissions %>%
group_by(type) %>%
summarise(count = n()) %>%
ggplot(aes(x = type, y = count)) +
geom_col()
spring_trans_types
spring_trans_types <- spring_transmissions %>%
group_by(type) %>%
summarise(count = n()) %>%
ggplot(aes(x = type, y = count)) +
geom_col() +
theme_minimal()
spring_trans_types <- spring_transmissions %>%
group_by(type) %>%
summarise(count = n()) %>%
ggplot(aes(x = type, y = count)) +
geom_col() +
theme_minimal() +
xlab("Transmission type") +
ylab("Number of transmission events") +
ggtitle("spring-calving herd")
spring_trans_types
spring_ls_types <- spring_transmissions %>%
group_by(stage, type) %>%
summarise(count = n())
spring_transmissions %>%
group_by(stage, type) %>%
summarise(count = n())
spring_ls_types <- spring_transmissions %>%
group_by(stage, type) %>%
summarise(count = n()) %>%
ggplot(aes(x = stage, y = count, color = type))
spring_ls_types <- spring_transmissions %>%
group_by(stage, type) %>%
summarise(count = n()) %>%
ggplot(aes(x = stage, y = count, color = type)) +
geom_col() +
theme_minimal() +
xlab("Life stage") +
ylab("Number of transmission events") +
ggtitle("spring-calving herd") +
labs(color = "Type of transmission")
spring_transmissions %>%
group_by(stage, type) %>%
summarise(count = n()) %>%
ggplot(aes(x = stage, y = count, color = type)) +
geom_col() +
theme_minimal() +
xlab("Life stage") +
ylab("Number of transmission events") +
ggtitle("spring-calving herd") +
labs(color = "Type of transmission")
spring_transmissions %>%
group_by(stage, type) %>%
summarise(count = n()) %>%
ggplot(aes(x = stage, y = count, fill = type)) +
geom_col() +
theme_minimal() +
xlab("Life stage") +
ylab("Number of transmission events") +
ggtitle("spring-calving herd") +
labs(fill = "Type of transmission")
spring_transmissions %>%
group_by(stage, type) %>%
summarise(count = n()) %>%
ggplot(aes(x = as.factor(stage), y = count, fill = type)) +
geom_col() +
theme_minimal() +
xlab("Life stage") +
ylab("Number of transmission events") +
ggtitle("spring-calving herd") +
labs(fill = "Type of transmission")
spring_transmissions
spring_transmissions <- read_csv("./export/spring_transmissions.csv") %>%
filter(type != "none")
pring_transmissions %>%
filter(type != "ee") %>%
`         group_by(from_id) %>%
summarise(count = n())
spring_transmissions %>%
filter(type != "ee") %>%
`         group_by(from_id) %>%
spring_transmissions %>%
filter(type != "ee") %>%
`         group_by(from_id) %>%
summarise(count = n())
spring_secondaries <- spring_transmissions %>%
filter(type != "ee") %>%
`         group_by(from_id) %>%
summarise(count = n())
spring_transmissions
spring_transmissions %>%
filter(type != "ee") %>%
`         group_by(from_id) %>%
summarise(count = n())
)
spring_secondaries <- spring_transmissions %>%
filter(type != "ee") %>%
`         group_by(from_id) %>%
summarise(count = n())
spring_transmissions %>%
filter(type != "ee")
spring_transmissions %>%
filter(type != "ee") %>%
`         group_by(from_id)
spring_transmissions %>%
filter(type != "ee") %>%
`         group_by(from_id)
library(tidyverse)
library(plotly)
library(ggpubr)
spring_transmissions <- read_csv("./export/spring_transmissions.csv") %>%
filter(type != "none")
spring_secondaries <- spring_transmissions %>%
filter(type != "ee") %>%
`         group_by(from_id) %>%
summarise(count = n())
length(unique(spring_secondaries$from_id))
length(unique(spring_transmissions$from_id))
spring_transmissions <- read_csv("./export/spring_transmissions.csv") %>%
filter(type != "none")
spring_trans_types <- spring_transmissions %>%
group_by(type) %>%
summarise(count = n()) %>%
ggplot(aes(x = type, y = count)) +
geom_col() +
theme_minimal() +
xlab("Transmission type") +
ylab("Number of transmission events") +
ggtitle("spring-calving herd")
spring_ls_types <- spring_transmissions %>%
group_by(stage, type) %>%
summarise(count = n()) %>%
ggplot(aes(x = as.factor(stage), y = count, fill = type)) +
geom_col() +
theme_minimal() +
xlab("Life stage") +
ylab("Number of transmission events") +
ggtitle("spring-calving herd") +
labs(fill = "Type of transmission")
spring_trans_types
spring_secondaries <- spring_transmissions %>%
filter(type != "ee") %>%
`         group_by(from_id) %>%
summarise(count = n())
spring_secondaries <- spring_transmissions %>%
filter(type != "ee") %>%
`         group_by(from_id) %>%
summarise(count = n_distinct(to_id))
length(unique(spring_transmissions$from_id))
spring_secondaries <- spring_transmissions %>%
filter(type != "ee") %>%
`         group_by(from_id) %>%
mutate(count = n_distinct(to_id))
spring_transmissions %>%
filter(type != "ee") %>%
`         group_by(from_id)
#Bring in the spring example data
library(tidyverse)
library(plotly)
library(ggpubr)
# Spring herds --------------------------------------------------
spring_example <- read_csv("./export/spring_example.csv") %>%
filter(timestep != "0-01-01") %>%
mutate(step = row_number()) %>%
filter(step > 365*2)
# Create a plot of population dynamics
calves <- ggplot(aes(x = step, y = num_calves), data = spring_example) + geom_line() + ylim(0,300) + theme_minimal() + ylab("Calves") + xlab("") + ggtitle("Calves")
weaned <- ggplot(aes(x = step, y = num_weaned), data = spring_example) + geom_line() + ylim(0,300) + theme_minimal() + ylab("Weaned") + xlab("") + ggtitle("Weaned")
heifers <- ggplot(aes(x = step, y = num_heifers), data = spring_example) + geom_line() + ylim(0,300) + theme_minimal() + ylab("Heifers") + xlab("") + ggtitle("Heifers")
dry_heifers <- ggplot(aes(x = step, y = num_dh), data = spring_example) + geom_line() + ylim(0,300) + theme_minimal() + ylab("Pregnant heifers") + xlab("") + ggtitle("Pregnant heifers")
lactating <- ggplot(aes(x = step, y = num_lactating), data = spring_example) + geom_line() + ylim(0,300) + theme_minimal() + ylab("Lactating") + xlab("") + ggtitle("Lactating")
dry <- ggplot(aes(x = step, y = num_dry), data = spring_example) + geom_line() + ylim(0,300) + theme_minimal() + ylab("Dry") + xlab("") + ggtitle("Dry")
spring_dyno <- ggarrange(calves, weaned, heifers, dry_heifers, lactating, dry) + rremove("x.text")
spring_dyno <- annotate_figure(spring_dyno,
top = text_grob("Spring-calving herds", face = "bold", size = 20),
left = text_grob("Number of animals", face = "bold", size = 20, rot = 90),
bottom = text_grob("Model step", face = "bold", size = 20),
)
# Split herds --------------------------------------------------
split_example <- read_csv("./export/split_example.csv") %>%
filter(timestep != "0-01-01") %>%
mutate(step = row_number()) %>%
filter(step > 365*2)
# Create a plot of population dynamics
calves <- ggplot(aes(x = step, y = num_calves), data = split_example) + geom_line() + ylim(0,300) + theme_minimal() + ylab("Calves") + xlab("") + ggtitle("Calves")
weaned <- ggplot(aes(x = step, y = num_weaned), data = split_example) + geom_line() + ylim(0,300) + theme_minimal() + ylab("Weaned") + xlab("") + ggtitle("Weaned")
heifers <- ggplot(aes(x = step, y = num_heifers), data = split_example) + geom_line() + ylim(0,300) + theme_minimal() + ylab("Heifers") + xlab("") + ggtitle("Heifers")
dry_heifers <- ggplot(aes(x = step, y = num_dh), data = split_example) + geom_line() + ylim(0,300) + theme_minimal() + ylab("Pregnant heifers") + xlab("") + ggtitle("Pregnant heifers")
lactating <- ggplot(aes(x = step, y = num_lactating), data = split_example) + geom_line() + ylim(0,300) + theme_minimal() + ylab("Lactating") + xlab("") + ggtitle("Lactating")
dry <- ggplot(aes(x = step, y = num_dry), data = split_example) + geom_line() + ylim(0,300) + theme_minimal() + ylab("Dry") + xlab("") + ggtitle("Dry")
split_dyno <- ggarrange(calves, weaned, heifers, dry_heifers, lactating, dry) + rremove("x.text")
split_dyno <- annotate_figure(split_dyno,
top = text_grob("Split-calving herds", face = "bold", size = 20),
left = text_grob("Number of animals", face = "bold", size = 20, rot = 90),
bottom = text_grob("Model step",  size = 12),
)
# Batch herds --------------------------------------------------
spring_example <- read_csv("./export/spring_example.csv") %>%
filter(timestep != "0-01-01") %>%
mutate(step = row_number()) %>%
filter(step > 365*2)
# Create a plot of population dynamics
calves <- ggplot(aes(x = step, y = num_calves), data = batch_example) + geom_line() + ylim(0,300) + theme_minimal() + ylab("Calves") + xlab("") + ggtitle("Calves")
weaned <- ggplot(aes(x = step, y = num_weaned), data = batch_example) + geom_line() + ylim(0,300) + theme_minimal() + ylab("Weaned") + xlab("") + ggtitle("Weaned")
heifers <- ggplot(aes(x = step, y = num_heifers), data = batch_example) + geom_line() + ylim(0,300) + theme_minimal() + ylab("Heifers") + xlab("") + ggtitle("Heifers")
dry_heifers <- ggplot(aes(x = step, y = num_dh), data = batch_example) + geom_line() + ylim(0,300) + theme_minimal() + ylab("Pregnant heifers") + xlab("") + ggtitle("Pregnant heifers")
lactating <- ggplot(aes(x = step, y = num_lactating), data = batch_example) + geom_line() + ylim(0,300) + theme_minimal() + ylab("Lactating") + xlab("") + ggtitle("Lactating")
dry <- ggplot(aes(x = step, y = num_dry), data = batch_example) + geom_line() + ylim(0,300) + theme_minimal() + ylab("Dry") + xlab("") + ggtitle("Dry")
spring_dyno <- ggarrange(calves, weaned, heifers, dry_heifers, lactating, dry) + rremove("x.text")
spring_dyno <- annotate_figure(spring_dyno,
top = text_grob("Batch-calving herds", face = "bold", size = 20),
left = text_grob("Number of animals", face = "bold", size = 20, rot = 90),
bottom = text_grob("Model step",  size = 12),
)
# Batch herds --------------------------------------------------
batch_example <- read_csv("./export/batch_example.csv") %>%
filter(timestep != "0-01-01") %>%
mutate(step = row_number()) %>%
filter(step > 365*2)
# Create a plot of population dynamics
calves <- ggplot(aes(x = step, y = num_calves), data = batch_example) + geom_line() + ylim(0,300) + theme_minimal() + ylab("Calves") + xlab("")
weaned <- ggplot(aes(x = step, y = num_weaned), data = batch_example) + geom_line() + ylim(0,300) + theme_minimal() + ylab("Weaned") + xlab("")
heifers <- ggplot(aes(x = step, y = num_heifers), data = batch_example) + geom_line() + ylim(0,300) + theme_minimal() + ylab("Heifers") + xlab("")
dry_heifers <- ggplot(aes(x = step, y = num_dh), data = batch_example) + geom_line() + ylim(0,300) + theme_minimal() + ylab("Pregnant heifers") + xlab("")
lactating <- ggplot(aes(x = step, y = num_lactating), data = batch_example) + geom_line() + ylim(0,300) + theme_minimal() + ylab("Lactating") + xlab("")
dry <- ggplot(aes(x = step, y = num_dry), data = batch_example) + geom_line() + ylim(0,300) + theme_minimal() + ylab("Dry") + xlab("")
batch_dyno <- ggarrange(calves, weaned, heifers, dry_heifers, lactating, dry) + rremove("x.text")
batch_dyno <- annotate_figure(batch_dyno,
top = text_grob("Batch-calving herds", face = "bold", size = 20),
left = text_grob("Number of animals", face = "bold", size = 20, rot = 90),
bottom = text_grob("Model step",  size = 12),
)
dyno_max <-ggarrange(spring_dyno, split_dyno, batch_dyno, ncol = 1)
# Create plots of infection dynamics -----------------------------
#spring
spring_prev <- spring_example %>%
rowwise() %>%
mutate(animals = sum(num_calves, num_weaned, num_heifers, num_dh, num_lactating, num_dry)) %>%
mutate(prev_r = 100*pop_r/animals,
prev_s = 100*pop_s/animals,
prev_p = 100*pop_p/animals,
#prev_rec = 100*((pop_rec_r+pop_rec_p)/animals),
prev_car_p = 100*pop_car_p/animals,
prev_car_r = 100*pop_car_r/animals) %>%
select(step, prev_r, prev_s, prev_p, prev_car_p, prev_car_r
#, prev_rec
) %>%
pivot_longer(cols = c(prev_r, prev_s, prev_p,
#prev_rec,
prev_car_p, prev_car_r), names_to = "prev", values_to = "prev_perc")
spring_prev_plot <- spring_prev %>%
ggplot(aes(x = step, y = prev_perc, colour = prev)) +
geom_col() +
theme_minimal() +
xlab("Model step") +
ylab("Point prevalence") +
ggtitle("Spring-calving herd") +
labs(colour = "Type of infection")
#split
split_prev <- split_example %>%
rowwise() %>%
mutate(animals = sum(num_calves, num_weaned, num_heifers, num_dh, num_lactating, num_dry)) %>%
mutate(prev_r = 100*pop_r/animals,
prev_s = 100*pop_s/animals,
prev_p = 100*pop_p/animals,
#prev_rec = 100*((pop_rec_r+pop_rec_p)/animals),
prev_car_p = 100*pop_car_p/animals,
prev_car_r = 100*pop_car_r/animals) %>%
select(step, prev_r, prev_s, prev_p, prev_car_p, prev_car_r
#, prev_rec
) %>%
pivot_longer(cols = c(prev_r, prev_s, prev_p,
#prev_rec,
prev_car_p, prev_car_r), names_to = "prev", values_to = "prev_perc")
split_prev_plot <- split_prev %>%
ggplot(aes(x = step, y = prev_perc, colour = prev)) +
geom_col() +
theme_minimal() +
xlab("Model step") +
ylab("Point prevalence") +
ggtitle("split-calving herd") +
labs(colour = "Type of infection")
#split
split_prev <- split_example %>%
rowwise() %>%
mutate(animals = sum(num_calves, num_weaned, num_heifers, num_dh, num_lactating, num_dry)) %>%
mutate(prev_r = 100*pop_r/animals,
prev_s = 100*pop_s/animals,
prev_p = 100*pop_p/animals,
#prev_rec = 100*((pop_rec_r+pop_rec_p)/animals),
prev_car_p = 100*pop_car_p/animals,
prev_car_r = 100*pop_car_r/animals) %>%
select(step, prev_r, prev_s, prev_p, prev_car_p, prev_car_r
#, prev_rec
) %>%
pivot_longer(cols = c(prev_r, prev_s, prev_p,
#prev_rec,
prev_car_p, prev_car_r), names_to = "prev", values_to = "prev_perc")
split_prev_plot <- split_prev %>%
ggplot(aes(x = step, y = prev_perc, colour = prev)) +
geom_col() +
theme_minimal() +
xlab("Model step") +
ylab("Point prevalence") +
ggtitle("split-calving herd") +
labs(colour = "Type of infection")
#batch
batch_prev <- batch_example %>%
rowwise() %>%
mutate(animals = sum(num_calves, num_weaned, num_heifers, num_dh, num_lactating, num_dry)) %>%
mutate(prev_r = 100*pop_r/animals,
prev_s = 100*pop_s/animals,
prev_p = 100*pop_p/animals,
#prev_rec = 100*((pop_rec_r+pop_rec_p)/animals),
prev_car_p = 100*pop_car_p/animals,
prev_car_r = 100*pop_car_r/animals) %>%
select(step, prev_r, prev_s, prev_p, prev_car_p, prev_car_r
#, prev_rec
) %>%
pivot_longer(cols = c(prev_r, prev_s, prev_p,
#prev_rec,
prev_car_p, prev_car_r), names_to = "prev", values_to = "prev_perc")
batch_prev_plot <- batch_prev %>%
ggplot(aes(x = step, y = prev_perc, colour = prev)) +
geom_col() +
theme_minimal() +
xlab("Model step") +
ylab("Point prevalence") +
ggtitle("batch-calving herd") +
labs(colour = "Type of infection")
#Within life stage infection dynamics
#Spring
spring_lsd <- spring_example %>%
rowwise() %>%
mutate(
calf_prev = 100*inf_calves/num_calves,
weaned_prev = 100*inf_weaned/num_weaned,
heifer_prev = 100*inf_heifers/num_heifers,
dh_prev = 100*inf_dh/num_dh,
lactating_prev = 100*inf_lac/num_lactating,
dry_prev = 100*inf_dry/num_dry
) %>%
select(step, contains("prev")) %>%
pivot_longer(cols = contains("prev"), names_to = "ls_prev", values_to = "prev")
spring_lsd_pp <- spring_lsd %>%
ggplot(aes(x = step, y = prev, color = ls_prev)) +
geom_line() +
theme_minimal() +
xlab("Model step") +
ylab("Point prevalence") +
ggtitle("spring-calving herd") +
labs(colour = "Life stage")
#split
split_lsd <- split_example %>%
rowwise() %>%
mutate(
calf_prev = 100*inf_calves/num_calves,
weaned_prev = 100*inf_weaned/num_weaned,
heifer_prev = 100*inf_heifers/num_heifers,
dh_prev = 100*inf_dh/num_dh,
lactating_prev = 100*inf_lac/num_lactating,
dry_prev = 100*inf_dry/num_dry
) %>%
select(step, contains("prev")) %>%
pivot_longer(cols = contains("prev"), names_to = "ls_prev", values_to = "prev")
split_lsd_pp <- split_lsd %>%
ggplot(aes(x = step, y = prev, color = ls_prev)) +
geom_line() +
theme_minimal() +
xlab("Model step") +
ylab("Point prevalence") +
ggtitle("split-calving herd") +
labs(colour = "Life stage")
#batch
batch_lsd <- batch_example %>%
rowwise() %>%
mutate(
calf_prev = 100*inf_calves/num_calves,
weaned_prev = 100*inf_weaned/num_weaned,
heifer_prev = 100*inf_heifers/num_heifers,
dh_prev = 100*inf_dh/num_dh,
lactating_prev = 100*inf_lac/num_lactating,
dry_prev = 100*inf_dry/num_dry
) %>%
select(step, contains("prev")) %>%
pivot_longer(cols = contains("prev"), names_to = "ls_prev", values_to = "prev")
batch_lsd_pp <- batch_lsd %>%
ggplot(aes(x = step, y = prev, color = ls_prev)) +
geom_col() +
theme_minimal() +
xlab("Model step") +
ylab("Point prevalence") +
ggtitle("batch-calving herd") +
labs(colour = "Life stage")
#Between herd transmissions
# spring
spring_transmissions <- read_csv("./export/spring_transmissions.csv") %>%
filter(type != "none")
spring_trans_types <- spring_transmissions %>%
group_by(type) %>%
summarise(count = n()) %>%
ggplot(aes(x = type, y = count)) +
geom_col() +
theme_minimal() +
xlab("Transmission type") +
ylab("Number of transmission events") +
ggtitle("spring-calving herd")
spring_ls_types <- spring_transmissions %>%
group_by(stage, type) %>%
summarise(count = n()) %>%
ggplot(aes(x = as.factor(stage), y = count, fill = type)) +
geom_col() +
theme_minimal() +
xlab("Life stage") +
ylab("Number of transmission events") +
ggtitle("Spring-calving herd") +
labs(fill = "Type of transmission")
